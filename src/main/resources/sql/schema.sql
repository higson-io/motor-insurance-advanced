DROP TABLE IF EXISTS ADDRESS;
DROP TABLE IF EXISTS DISCOUNT;
DROP TABLE IF EXISTS DRIVER;
DROP TABLE IF EXISTS OPTION;
DROP TABLE IF EXISTS COVERAGE;
DROP TABLE IF EXISTS QUOTE;
DROP TABLE IF EXISTS VEHICLE;
DROP TABLE IF EXISTS PERSISTENCE_BUNDLE;

DROP SEQUENCE IF EXISTS persistence_seq;

----------------

create sequence persistence_seq start with 100;

CREATE TABLE PUBLIC.PERSISTENCE_BUNDLE
(
	"ID" NUMBER , 
	"REVISION" long NOT NULL, 
	"CREATED" TIMESTAMP (6) NOT NULL,
	"UPDATED" TIMESTAMP (6), 
	"VALUE" CLOB
);

create table PUBLIC.QUOTE        
(
  ID LONG NOT NULL,
  BID LONG NOT NULL, 
  PARENTID LONG NOT NULL, 
  COLLNAME VARCHAR2(100) NOT NULL, 
  PLAN_CODE VARCHAR2(100) NOT NULL,
  PRIMARY KEY ("ID")
);

create table PUBLIC.DRIVER        
(
  ID LONG NOT NULL,
  BID LONG NOT NULL, 
  PARENTID LONG NOT NULL, 
  COLLNAME VARCHAR2(100) NOT NULL, 
  AGE INTEGER NOT NULL,
  BIRTH_DATE TIMESTAMP (6) NOT NULL,
  FIRST_NAME VARCHAR(100) NOT NULL,
  LAST_NAME VARCHAR(100) NOT NULL,
  GENDER CHAR(1) NOT NULL,
  LICENCE_AGE INTEGER NOT NULL,
  ACCIDENTS_COUNT INTEGER NOT NULL,
  TICKETS_COUNT INTEGER NOT NULL,
  
  PRIMARY KEY ("ID"),
  FOREIGN KEY (PARENTID) REFERENCES QUOTE(id)
);

create table PUBLIC.ADDRESS        
(
  ID LONG NOT NULL,
  BID LONG NOT NULL, 
  PARENTID LONG NOT NULL, 
  COLLNAME VARCHAR2(100) NOT NULL, 
  CITY VARCHAR(25) NULL,
  COUNTRY VARCHAR(25) NULL,
  FALT_NO VARCHAR(25) NULL,
  STREET VARCHAR(25) NULL,
  STREET_NUMBER VARCHAR(25) NULL,
  ZIP_CODE VARCHAR(25) NULL,
  
  PRIMARY KEY ("ID"),
  FOREIGN KEY (PARENTID) REFERENCES DRIVER(id)
);

create table PUBLIC.OPTION        
(
  ID LONG NOT NULL,
  BID LONG NOT NULL, 
  PARENTID LONG NOT NULL, 
  COLLNAME VARCHAR2(100) NOT NULL, 
  CODE VARCHAR2(100) NOT NULL,
  
  PRIMARY KEY ("ID"),
  FOREIGN KEY (PARENTID) REFERENCES QUOTE(id)
);

create table PUBLIC.COVERAGE        
(
  ID LONG NOT NULL,
  BID LONG NOT NULL, 
  PARENTID LONG NOT NULL, 
  COLLNAME VARCHAR2(100) NOT NULL, 
  CODE VARCHAR2(100) NOT NULL,
  PREMIUM DECIMAL,
  
  PRIMARY KEY ("ID"),
  FOREIGN KEY (PARENTID) REFERENCES OPTION(id)
);


create table PUBLIC.DISCOUNT        
(
  ID LONG NOT NULL,
  BID LONG NOT NULL, 
  PARENTID LONG NOT NULL, 
  COLLNAME VARCHAR2(100) NOT NULL, 
  CODE VARCHAR2(100) NOT NULL,
  VALUE DECIMAL,
  
  PRIMARY KEY ("ID"),
  FOREIGN KEY (PARENTID) REFERENCES OPTION(id)
);

create table PUBLIC.VEHICLE        
(
  ID LONG NOT NULL,
  BID LONG NOT NULL, 
  PARENTID LONG NOT NULL, 
  COLLNAME VARCHAR2(100) NOT NULL, 
  MODEL_ID LONG NOT NULL,
  TYPE_ID LONG NOT NULL,
  
  PRIMARY KEY ("ID"),
  FOREIGN KEY (PARENTID) REFERENCES QUOTE(id)
);
